{"version":3,"sources":["webpack:///plp.js","webpack:///./lib/scripts/entry-points/plp/index.js","webpack:///./lib/scripts/modules/heart-product.js","webpack:///./lib/scripts/modules/toggle-display.js","webpack:///./lib/scripts/modules/register-jquery-plugin.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","filterSetup","$","toggleDisplay","$pageHeaderOverlay","$pageHeaderTitle","$toggleThis","attr","$bodyAndHtml","on","hasClass","slideUp","removeClass","bindHeartItems","heartProduct","document","ready","77","init","selector","delegateTo","$el","e","target","currentTarget","heartProductM","getAttribute","PRODUCT_CODE","elem","pcode","size","sectionUrl","$span","find","CLASS_NAMES","activated","submitHeart","addClass","paramtype","paramvalue","action","psize","data","heartInfo","rejectPromise","bcode","action_T","sectionURL","requestHeartProduct","then","heartStatus","updateHeartCount","totalCount","sanitizeResponse","str","replace","msg","Deferred","reject","Error","ajax","type","REQUESTS","method","url","res","cache","count","SELECTORS","html","heartAll","defaults","favHeart","78","el","options","opts","mergeOptions","applyEventHandlers","Object","assign","DEFAULTS","CLICK_EVENT","evt","itemClickHandler","slideDown","registerJQueryPlugin","PLUGIN_NAME","speed","extend","79","name","cb","fn","this","each"],"mappings":"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","file":"plp.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(8);\n\tvar heartProduct = __webpack_require__(77);\n\t__webpack_require__(78);\n\t\n\tfunction filterSetup() {\n\t  $('.js-toggle-display').toggleDisplay();\n\t\n\t  // Event for clicking on overlay on title dropdown\n\t  var $pageHeaderOverlay = $(\".js-page-header-overlay\");\n\t  var $pageHeaderTitle =$(\".page-header__title\");\n\t  var $toggleThis = $($pageHeaderTitle.attr('data-toggle-this'));\n\t  var $bodyAndHtml = $(\"html, body\");\n\t\n\t  $pageHeaderOverlay.on(\"click\", function() {\n\t    if($pageHeaderTitle.hasClass(\"is-active\")) {\n\t      $toggleThis.slideUp();\n\t      $pageHeaderTitle.removeClass(\"is-active\");\n\t      $bodyAndHtml.removeClass(\"page-constrain\");\n\t    }\n\t  });\n\t}\n\t\n\t\n\t// var manageRefineMenu = require('./manage-refine-menu');\n\t// var toggleCategoryDropdown = require('./toggle-category-dropdown');\n\t// var loadBrands = require('modules/load-brands');\n\t\n\t// function setupToggleCategoryDropdown() {\n\t//   toggleCategoryDropdown();\n\t// }\n\t\n\t// function resetFilters() {\n\t//   var $filterSelects = $('#filter_options').find('.select_single select, .select_multiple select');\n\t\n\t//   $('#clear_filters').click(function(event) {\n\t//     event.preventDefault();\n\t//     $filterSelects.prop('selectedIndex', 0);\n\t//   });\n\t// }\n\t\n\t// function processSorting() {\n\t//   var $formSort = $('#sort_by_form');\n\t//   var $filterApply = $('#apply_filters');\n\t//   $('#sort_options').change(function(){\n\t//     $formSort.submit();\n\t//     $filterApply.click();\n\t//   });\n\t// }\n\t\n\t// function bindBrandsURl() {\n\t//   $('#apply_filters, #next_btn').on('click', function(e) {\n\t//     loadBrands(e.currentTarget);\n\t//   });\n\t\n\t//   $('#plp_filter_dd').on('click', 'a', function(e) {\n\t//     loadBrands(e.target);\n\t//   });\n\t// }\n\t\n\tfunction bindHeartItems() {\n\t  heartProduct('#pageItems', '.fav-item');\n\t}\n\t\n\t$(document).ready(function() {\n\t  filterSetup();\n\t  // manageRefineMenu();\n\t  // setupToggleCategoryDropdown();\n\t  // resetFilters();\n\t  // processSorting();\n\t  // bindBrandsURl();\n\t  bindHeartItems();\n\t});\n\n\n/***/ },\n\n/***/ 77:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(8);\n\tvar defaults = __webpack_require__(12);\n\tvar PRODUCT_CODE = 'data-pcode';\n\tvar SELECTORS = {\n\t  totalCount: '#heart_total_count',\n\t  favHeart: '.fav_heart'\n\t};\n\tvar CLASS_NAMES = {\n\t  activated: 'hearted_active'\n\t};\n\tvar REQUESTS = {\n\t  heartProduct: {\n\t    url: '/r/ajaxHeartProduct.jsp?',\n\t    method: 'POST'\n\t  },\n\t  totalCount: {\n\t    url: '/r/AjaxHeartTotalCount.jsp',\n\t    method: 'POST'\n\t  }\n\t};\n\t\n\tmodule.exports = init;\n\tdefaults(module.exports, {\n\t  heartProductM: heartProductM,\n\t  heartAll: heartAll,\n\t  SELECTORS: SELECTORS,\n\t  CLASS_NAMES: CLASS_NAMES,\n\t  REQUESTS: REQUESTS\n\t});\n\t\n\tfunction init(selector, delegateTo) {\n\t  var $el = $(selector);\n\t\n\t  if (delegateTo) {\n\t    $el.on('click', delegateTo, function(e) {\n\t      var target = e.currentTarget;\n\t      heartProductM(target, target.getAttribute(PRODUCT_CODE));\n\t    });\n\t  } else {\n\t    $el.on('click', function(e) {\n\t      var target = e.target;\n\t      heartProductM(target, target.getAttribute(PRODUCT_CODE));\n\t    });\n\t  }\n\t}\n\t\n\tfunction heartProductM(elem, pcode, size, sectionUrl){\n\t  var $span = $(elem).find('span');\n\t  if ($span.hasClass(CLASS_NAMES.activated)){\n\t    $span.removeClass(CLASS_NAMES.activated);\n\t    return submitHeart('product', pcode, 'remove', size, sectionUrl);\n\t  } else {\n\t    $span.addClass(CLASS_NAMES.activated);\n\t    return submitHeart('product', pcode, 'add', size, sectionUrl);\n\t  }\n\t}\n\t\n\tfunction submitHeart(paramtype, paramvalue, action, psize, sectionUrl) {\n\t  var data = {};\n\t  var heartInfo = {};\n\t\n\t  if (!paramtype) {\n\t    return rejectPromise('param type is required when hearting a product');\n\t  } else if (!paramvalue) {\n\t    return rejectPromise('param value is required when hearting a product');\n\t  } else if (!action) {\n\t    return rejectPromise('action is required when hearting a product');\n\t  }\n\t\n\t  switch (paramtype) {\n\t    case 'product':\n\t      data.pcode = paramvalue;\n\t      break\n\t    case 'brand':\n\t      data.bcode = paramvalue;\n\t      break\n\t  }\n\t\n\t  data.action_T = action;\n\t\n\t  if (psize) {\n\t    data.psize = psize;\n\t  }\n\t\n\t  if (sectionUrl) {\n\t    data.sectionURL = sectionUrl;\n\t  }\n\t\n\t  return requestHeartProduct(data)\n\t    .then(function(heartStatus) {\n\t      heartInfo.heartStatus = heartStatus;\n\t      return updateHeartCount();\n\t    })\n\t    .then(function(totalCount) {\n\t      heartInfo.totalCount = totalCount;\n\t      return heartInfo;\n\t    });\n\t}\n\t\n\tfunction sanitizeResponse(str) {\n\t  return str.replace(/^\\s+|\\s+$/g,'');\n\t}\n\t\n\tfunction rejectPromise(msg) {\n\t  return $.Deferred().reject(new Error(msg));\n\t}\n\t\n\tfunction requestHeartProduct(data) {\n\t  return $.ajax({\n\t      type: REQUESTS.heartProduct.method,\n\t      url: REQUESTS.heartProduct.url,\n\t      data: data\n\t    })\n\t    .then(function(res) {\n\t      return sanitizeResponse(res);\n\t    });\n\t}\n\t\n\tfunction updateHeartCount() {\n\t  return $.ajax({\n\t      type: REQUESTS.totalCount.method,\n\t      url: REQUESTS.totalCount.url,\n\t      cache: false\n\t    })\n\t    .then(function(res) {\n\t      var count = sanitizeResponse(res);\n\t      $(SELECTORS.totalCount).html(count);\n\t      return count;\n\t    });\n\t}\n\t\n\t//this method only use in mobile display product page\n\tfunction heartAll(elem){\n\t  if ($(elem).find('span').hasClass(CLASS_NAMES.activated)){\n\t    $('.fav_heart').removeClass(CLASS_NAMES.activated);\n\t  } else {\n\t    $('.fav_heart').addClass(CLASS_NAMES.activated);\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 78:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Responsible for creating an toggleContent based on elements existing in the DOM\n\t * @module toggleContent\n\t */\n\t\n\tvar $ = __webpack_require__(8);\n\tvar registerJQueryPlugin = __webpack_require__(79);\n\t\n\tvar PLUGIN_NAME = 'toggleDisplay';\n\tvar CLICK_EVENT = 'click';\n\t\n\tvar DEFAULTS = {\n\t  speed: 500\n\t};\n\t\n\tmodule.exports = toggleDisplay;\n\t$.extend(module.exports, {\n\t  PLUGIN_NAME: PLUGIN_NAME,\n\t  CLICK_EVENT: CLICK_EVENT\n\t});\n\t\n\t// Expose the function as a jQuery plugin for ease of use\n\tregisterJQueryPlugin(PLUGIN_NAME, toggleDisplay);\n\t\n\t/**\n\t * Initializes an toggleContent based on provided parameters.\n\t * @param {HTMLElement} el - An element containing the elements for the\n\t * toggleContent\n\t * @param {Object} options - Options used for wiring up the toggleContent\n\t * @see DEFAULTS\n\t */\n\tfunction toggleDisplay(el, options) {\n\t  options = options || {};\n\t  var $el = $(el);\n\t  var opts = mergeOptions($el, options)\n\t\n\t  applyEventHandlers($el, opts);\n\t}\n\t\n\t/**\n\t * Merges together all the options and the various conditions in which they\n\t * can be set.\n\t * @param  {jQuery} $el - The container element\n\t * @param  {Object} [options={}] - Any options provided upon initialization\n\t * @return {Object} Immutable version of the options\n\t */\n\tfunction mergeOptions($el, options) {\n\t  options = options || {};\n\t  var opts = Object.assign({}, DEFAULTS, options);\n\t  return opts;\n\t}\n\t\n\t\n\t/**\n\t * Applies any sort of event handlers for the toggleContent.\n\t * @param {jQuery} $el - Containing the elements for the toggleContent\n\t * @param {Object} options - Options used for wiring up the toggleContent\n\t * @see DEFAULTS\n\t */\n\tfunction applyEventHandlers($el, opts) {\n\t  opts = opts || {};\n\t\n\t  $el\n\t    .on(CLICK_EVENT, function(evt){\n\t      itemClickHandler(evt, $el, opts)\n\t    });\n\t}\n\t\n\t/**\n\t * Handles the click event when a label has been iteracted with.\n\t * @param {jQuery.Event} evt - A jQuery event\n\t * @param {HTMLElement} currentTarget - The current target interacted with\n\t * @param {jQuery} $el - Containing the elements for the toggleContent\n\t * @param {Object} opts - Options passed along from initialization\n\t */\n\tfunction itemClickHandler(e, $el) {\n\t  var $toggleThis = $($el.attr('data-toggle-this'));\n\t  if($el.hasClass(\"is-active\")) {\n\t    $toggleThis.slideUp();\n\t    $el.removeClass(\"is-active\");\n\t  } else {\n\t    $toggleThis.slideDown();\n\t    $el.addClass(\"is-active\");\n\t  }\n\t}\n\t\n\n\n/***/ },\n\n/***/ 79:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * This simple helper aids in the creation of creating/registering a jquery\n\t * plugin.\n\t * @module create-jquery-plugin\n\t */\n\t\n\tvar $ = __webpack_require__(8);\n\t\n\t/**\n\t * Simple helper function that creates/register a jQuery plugin.\n\t * @param {string} name - The name of the plugin to reguster\n\t * @param {jQueryPluginCallback} cb - A callback function\n\t */\n\tmodule.exports = function registerJQueryPlugin(name, cb) {\n\t  $.fn[name] = function(options) {\n\t    return this.each(function() {\n\t      if (!$.data(this, 'plugin_' + name)) {\n\t        $.data(this, 'plugin_' + name, cb(this, options) || true);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * This callback is used for registering a jQuery plugin.\n\t * @callback jQueryPluginCallback\n\t * @param {HTMLElement} el - The element applied to the plugin\n\t * @param {Object} options - Options forwarded along to the plugin.\n\t */\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** plp.js\n **/","var $ = require('jquery');\nvar heartProduct = require('modules/heart-product');\nrequire('modules/toggle-display');\n\nfunction filterSetup() {\n  $('.js-toggle-display').toggleDisplay();\n\n  // Event for clicking on overlay on title dropdown\n  var $pageHeaderOverlay = $(\".js-page-header-overlay\");\n  var $pageHeaderTitle =$(\".page-header__title\");\n  var $toggleThis = $($pageHeaderTitle.attr('data-toggle-this'));\n  var $bodyAndHtml = $(\"html, body\");\n\n  $pageHeaderOverlay.on(\"click\", function() {\n    if($pageHeaderTitle.hasClass(\"is-active\")) {\n      $toggleThis.slideUp();\n      $pageHeaderTitle.removeClass(\"is-active\");\n      $bodyAndHtml.removeClass(\"page-constrain\");\n    }\n  });\n}\n\n\n// var manageRefineMenu = require('./manage-refine-menu');\n// var toggleCategoryDropdown = require('./toggle-category-dropdown');\n// var loadBrands = require('modules/load-brands');\n\n// function setupToggleCategoryDropdown() {\n//   toggleCategoryDropdown();\n// }\n\n// function resetFilters() {\n//   var $filterSelects = $('#filter_options').find('.select_single select, .select_multiple select');\n\n//   $('#clear_filters').click(function(event) {\n//     event.preventDefault();\n//     $filterSelects.prop('selectedIndex', 0);\n//   });\n// }\n\n// function processSorting() {\n//   var $formSort = $('#sort_by_form');\n//   var $filterApply = $('#apply_filters');\n//   $('#sort_options').change(function(){\n//     $formSort.submit();\n//     $filterApply.click();\n//   });\n// }\n\n// function bindBrandsURl() {\n//   $('#apply_filters, #next_btn').on('click', function(e) {\n//     loadBrands(e.currentTarget);\n//   });\n\n//   $('#plp_filter_dd').on('click', 'a', function(e) {\n//     loadBrands(e.target);\n//   });\n// }\n\nfunction bindHeartItems() {\n  heartProduct('#pageItems', '.fav-item');\n}\n\n$(document).ready(function() {\n  filterSetup();\n  // manageRefineMenu();\n  // setupToggleCategoryDropdown();\n  // resetFilters();\n  // processSorting();\n  // bindBrandsURl();\n  bindHeartItems();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/scripts/entry-points/plp/index.js\n ** module id = 0\n ** module chunks = 2\n **/","var $ = require('jquery');\nvar defaults = require('lodash/defaults');\nvar PRODUCT_CODE = 'data-pcode';\nvar SELECTORS = {\n  totalCount: '#heart_total_count',\n  favHeart: '.fav_heart'\n};\nvar CLASS_NAMES = {\n  activated: 'hearted_active'\n};\nvar REQUESTS = {\n  heartProduct: {\n    url: '/r/ajaxHeartProduct.jsp?',\n    method: 'POST'\n  },\n  totalCount: {\n    url: '/r/AjaxHeartTotalCount.jsp',\n    method: 'POST'\n  }\n};\n\nmodule.exports = init;\ndefaults(module.exports, {\n  heartProductM: heartProductM,\n  heartAll: heartAll,\n  SELECTORS: SELECTORS,\n  CLASS_NAMES: CLASS_NAMES,\n  REQUESTS: REQUESTS\n});\n\nfunction init(selector, delegateTo) {\n  var $el = $(selector);\n\n  if (delegateTo) {\n    $el.on('click', delegateTo, function(e) {\n      var target = e.currentTarget;\n      heartProductM(target, target.getAttribute(PRODUCT_CODE));\n    });\n  } else {\n    $el.on('click', function(e) {\n      var target = e.target;\n      heartProductM(target, target.getAttribute(PRODUCT_CODE));\n    });\n  }\n}\n\nfunction heartProductM(elem, pcode, size, sectionUrl){\n  var $span = $(elem).find('span');\n  if ($span.hasClass(CLASS_NAMES.activated)){\n    $span.removeClass(CLASS_NAMES.activated);\n    return submitHeart('product', pcode, 'remove', size, sectionUrl);\n  } else {\n    $span.addClass(CLASS_NAMES.activated);\n    return submitHeart('product', pcode, 'add', size, sectionUrl);\n  }\n}\n\nfunction submitHeart(paramtype, paramvalue, action, psize, sectionUrl) {\n  var data = {};\n  var heartInfo = {};\n\n  if (!paramtype) {\n    return rejectPromise('param type is required when hearting a product');\n  } else if (!paramvalue) {\n    return rejectPromise('param value is required when hearting a product');\n  } else if (!action) {\n    return rejectPromise('action is required when hearting a product');\n  }\n\n  switch (paramtype) {\n    case 'product':\n      data.pcode = paramvalue;\n      break\n    case 'brand':\n      data.bcode = paramvalue;\n      break\n  }\n\n  data.action_T = action;\n\n  if (psize) {\n    data.psize = psize;\n  }\n\n  if (sectionUrl) {\n    data.sectionURL = sectionUrl;\n  }\n\n  return requestHeartProduct(data)\n    .then(function(heartStatus) {\n      heartInfo.heartStatus = heartStatus;\n      return updateHeartCount();\n    })\n    .then(function(totalCount) {\n      heartInfo.totalCount = totalCount;\n      return heartInfo;\n    });\n}\n\nfunction sanitizeResponse(str) {\n  return str.replace(/^\\s+|\\s+$/g,'');\n}\n\nfunction rejectPromise(msg) {\n  return $.Deferred().reject(new Error(msg));\n}\n\nfunction requestHeartProduct(data) {\n  return $.ajax({\n      type: REQUESTS.heartProduct.method,\n      url: REQUESTS.heartProduct.url,\n      data: data\n    })\n    .then(function(res) {\n      return sanitizeResponse(res);\n    });\n}\n\nfunction updateHeartCount() {\n  return $.ajax({\n      type: REQUESTS.totalCount.method,\n      url: REQUESTS.totalCount.url,\n      cache: false\n    })\n    .then(function(res) {\n      var count = sanitizeResponse(res);\n      $(SELECTORS.totalCount).html(count);\n      return count;\n    });\n}\n\n//this method only use in mobile display product page\nfunction heartAll(elem){\n  if ($(elem).find('span').hasClass(CLASS_NAMES.activated)){\n    $('.fav_heart').removeClass(CLASS_NAMES.activated);\n  } else {\n    $('.fav_heart').addClass(CLASS_NAMES.activated);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/scripts/modules/heart-product.js\n ** module id = 77\n ** module chunks = 2\n **/","/**\n * Responsible for creating an toggleContent based on elements existing in the DOM\n * @module toggleContent\n */\n\nvar $ = require('jquery');\nvar registerJQueryPlugin = require('modules/register-jquery-plugin');\n\nvar PLUGIN_NAME = 'toggleDisplay';\nvar CLICK_EVENT = 'click';\n\nvar DEFAULTS = {\n  speed: 500\n};\n\nmodule.exports = toggleDisplay;\n$.extend(module.exports, {\n  PLUGIN_NAME: PLUGIN_NAME,\n  CLICK_EVENT: CLICK_EVENT\n});\n\n// Expose the function as a jQuery plugin for ease of use\nregisterJQueryPlugin(PLUGIN_NAME, toggleDisplay);\n\n/**\n * Initializes an toggleContent based on provided parameters.\n * @param {HTMLElement} el - An element containing the elements for the\n * toggleContent\n * @param {Object} options - Options used for wiring up the toggleContent\n * @see DEFAULTS\n */\nfunction toggleDisplay(el, options) {\n  options = options || {};\n  var $el = $(el);\n  var opts = mergeOptions($el, options)\n\n  applyEventHandlers($el, opts);\n}\n\n/**\n * Merges together all the options and the various conditions in which they\n * can be set.\n * @param  {jQuery} $el - The container element\n * @param  {Object} [options={}] - Any options provided upon initialization\n * @return {Object} Immutable version of the options\n */\nfunction mergeOptions($el, options) {\n  options = options || {};\n  var opts = Object.assign({}, DEFAULTS, options);\n  return opts;\n}\n\n\n/**\n * Applies any sort of event handlers for the toggleContent.\n * @param {jQuery} $el - Containing the elements for the toggleContent\n * @param {Object} options - Options used for wiring up the toggleContent\n * @see DEFAULTS\n */\nfunction applyEventHandlers($el, opts) {\n  opts = opts || {};\n\n  $el\n    .on(CLICK_EVENT, function(evt){\n      itemClickHandler(evt, $el, opts)\n    });\n}\n\n/**\n * Handles the click event when a label has been iteracted with.\n * @param {jQuery.Event} evt - A jQuery event\n * @param {HTMLElement} currentTarget - The current target interacted with\n * @param {jQuery} $el - Containing the elements for the toggleContent\n * @param {Object} opts - Options passed along from initialization\n */\nfunction itemClickHandler(e, $el) {\n  var $toggleThis = $($el.attr('data-toggle-this'));\n  if($el.hasClass(\"is-active\")) {\n    $toggleThis.slideUp();\n    $el.removeClass(\"is-active\");\n  } else {\n    $toggleThis.slideDown();\n    $el.addClass(\"is-active\");\n  }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/scripts/modules/toggle-display.js\n ** module id = 78\n ** module chunks = 2\n **/","/**\n * This simple helper aids in the creation of creating/registering a jquery\n * plugin.\n * @module create-jquery-plugin\n */\n\nvar $ = require('jquery');\n\n/**\n * Simple helper function that creates/register a jQuery plugin.\n * @param {string} name - The name of the plugin to reguster\n * @param {jQueryPluginCallback} cb - A callback function\n */\nmodule.exports = function registerJQueryPlugin(name, cb) {\n  $.fn[name] = function(options) {\n    return this.each(function() {\n      if (!$.data(this, 'plugin_' + name)) {\n        $.data(this, 'plugin_' + name, cb(this, options) || true);\n      }\n    });\n  }\n};\n\n/**\n * This callback is used for registering a jQuery plugin.\n * @callback jQueryPluginCallback\n * @param {HTMLElement} el - The element applied to the plugin\n * @param {Object} options - Options forwarded along to the plugin.\n */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/scripts/modules/register-jquery-plugin.js\n ** module id = 79\n ** module chunks = 2\n **/"],"sourceRoot":""}